(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     14419,        277]
NotebookOptionsPosition[     13100,        242]
NotebookOutlinePosition[     13897,        269]
CellTagsIndexPosition[     13800,        263]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.735037230418271*^9, 
  3.73503723128323*^9}},ExpressionUUID->"4309e3fd-7fc6-4390-94ce-\
f922b95886cc"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.735294422967062*^9, 3.7352944235936604`*^9}},
 CellTags->"scelta",ExpressionUUID->"9dd115e9-98b7-4761-8eee-1cddae712fc0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";", " ", 
  RowBox[{"<<", " ", "package.m"}], ";", " ", 
  RowBox[{"AltezzaTorre", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.734851720561689*^9, 3.734851721300779*^9}, 
   3.7348523017858644`*^9, {3.734852618652252*^9, 3.7348526192466936`*^9}, {
   3.7348526713345904`*^9, 3.734852737127641*^9}, {3.734857481282914*^9, 
   3.7348574821599283`*^9}, {3.734857946617611*^9, 3.734857949921915*^9}, {
   3.734858253993695*^9, 3.7348582546311607`*^9}, {3.734858367351495*^9, 
   3.734858367885936*^9}, {3.734948316093418*^9, 3.734948322902442*^9}, {
   3.7349493651736565`*^9, 3.7349494288187532`*^9}, 3.73495076179533*^9, 
   3.7349508034246955`*^9, 3.735018627217641*^9, {3.73503466705896*^9, 
   3.7350346751736917`*^9}, {3.7350371638976455`*^9, 
   3.7350372865641556`*^9}, {3.7350376644551806`*^9, 3.735037684518173*^9}, {
   3.735037717569003*^9, 3.735037743072545*^9}, {3.735037787406232*^9, 
   3.735037788773927*^9}, {3.735131255368415*^9, 3.735131263742033*^9}, {
   3.7351890138778796`*^9, 3.735189025936661*^9}, {3.7351892020979123`*^9, 
   3.7351892029863853`*^9}, {3.7351892889634976`*^9, 3.735189345754902*^9}, {
   3.7352885526193094`*^9, 3.7352885617919035`*^9}, {3.7352900972603436`*^9, 
   3.7352900999554043`*^9}, {3.7352901418931303`*^9, 
   3.7352901572388787`*^9}, {3.735291887212019*^9, 3.7352918909914365`*^9}, {
   3.7352921127378798`*^9, 3.73529211330167*^9}, {3.735293214099984*^9, 
   3.7352932152188206`*^9}, {3.735293408663309*^9, 3.735293409978304*^9}, {
   3.7352938965307875`*^9, 3.735293914700846*^9}, {3.735294005640997*^9, 
   3.735294010261369*^9}, {3.7352940533674736`*^9, 3.7352941484986477`*^9}, {
   3.735294203929695*^9, 3.735294253615596*^9}, {3.73529436990388*^9, 
   3.7352944643323755`*^9}, {3.7352983800759106`*^9, 3.735298383087204*^9}, {
   3.7352984590077353`*^9, 3.7352985120363855`*^9}, {3.7352986777724223`*^9, 
   3.7352987055732255`*^9}, {3.73530386296327*^9, 3.7353039204990444`*^9}, {
   3.735304455223299*^9, 3.7353045246062236`*^9}, {3.735305172940804*^9, 
   3.7353051778630857`*^9}, {3.7353053871575065`*^9, 3.73530541691861*^9}, {
   3.735305576870549*^9, 3.735305578045928*^9}, {3.7353058706172667`*^9, 
   3.7353058714797525`*^9}, {3.7353060821690817`*^9, 3.735306103059305*^9}, {
   3.7353068434264417`*^9, 3.7353068609409046`*^9}, {3.7353069457359514`*^9, 
   3.7353069686494627`*^9}, {3.7353070015117965`*^9, 
   3.7353070409945335`*^9}, {3.7353072511678457`*^9, 3.7353072612969093`*^9}, 
   3.735310466555731*^9, {3.735310692394842*^9, 3.7353107159603233`*^9}, {
   3.7353115383860116`*^9, 3.7353115670343094`*^9}, {3.735311604086152*^9, 
   3.7353116056367702`*^9}, {3.735311723722021*^9, 3.7353117247531414`*^9}, {
   3.735312773976804*^9, 3.7353127756850195`*^9}, {3.7353134399497194`*^9, 
   3.735313442112957*^9}, {3.7353135315507965`*^9, 3.735313534827612*^9}, {
   3.7353144936055574`*^9, 3.735314494687747*^9}, 3.735314942268444*^9, {
   3.7353150490497932`*^9, 3.7353152492174263`*^9}, {3.735315282178447*^9, 
   3.735315289535389*^9}, {3.7353921443009024`*^9, 3.735392213012721*^9}, {
   3.7353923046761127`*^9, 3.7353923422212734`*^9}, {3.7353923815441413`*^9, 
   3.7353925430225143`*^9}, {3.735447073925337*^9, 3.7354471006034083`*^9}, {
   3.7354471749522123`*^9, 3.7354472014714327`*^9}, {3.7354477183991103`*^9, 
   3.735447721676863*^9}, 3.7354478838699512`*^9, {3.7354484057590365`*^9, 
   3.7354484062477427`*^9}, 3.735450646959263*^9, {3.7354507533454494`*^9, 
   3.7354507839218287`*^9}, {3.7354508433834586`*^9, 3.73545084407129*^9}, {
   3.735450978914585*^9, 3.7354509793797855`*^9}, {3.7354510927816086`*^9, 
   3.735451133200992*^9}, {3.7354514120009336`*^9, 3.735451467679988*^9}, {
   3.735451684268011*^9, 3.7354516856621203`*^9}, {3.7354518210800877`*^9, 
   3.7354518554446826`*^9}, {3.735451933278484*^9, 3.735451947207169*^9}, {
   3.735452048446594*^9, 3.73545209321323*^9}, 3.73545219580816*^9, {
   3.7354523482792773`*^9, 3.7354523523852973`*^9}, {3.735472200417504*^9, 
   3.735472202387808*^9}, {3.7354723376006575`*^9, 3.735472338717595*^9}, {
   3.735472432295759*^9, 3.735472443534231*^9}, {3.7354726562476463`*^9, 
   3.7354726569264517`*^9}, {3.735472726928814*^9, 3.7354727283927097`*^9}, {
   3.735472788047025*^9, 3.735472790385249*^9}, {3.7354733284684925`*^9, 
   3.7354733410880404`*^9}, {3.7354733932167487`*^9, 3.735473399090395*^9}, {
   3.7354734572037435`*^9, 3.7354734583658357`*^9}, {3.73547353221507*^9, 
   3.735473535529928*^9}, {3.7354736250461454`*^9, 3.735473629083893*^9}, 
   3.735473855005189*^9, {3.7354743957404747`*^9, 3.7354743968794737`*^9}, {
   3.7354759901456985`*^9, 3.7354759910133376`*^9}, 3.7355528611712303`*^9, {
   3.735553536556405*^9, 3.735553562969305*^9}, {3.735553754791226*^9, 
   3.7355537553637753`*^9}, {3.7355538457271395`*^9, 3.735553850132082*^9}, {
   3.7355543711752467`*^9, 3.735554373329955*^9}, {3.7355596231036863`*^9, 
   3.735559649040409*^9}, {3.7355599696668625`*^9, 3.735560136796036*^9}, {
   3.735560581697214*^9, 3.735560659954343*^9}, {3.7355607902783537`*^9, 
   3.7355608215086684`*^9}, {3.735563960237297*^9, 3.735564056180324*^9}, {
   3.7355641133248463`*^9, 3.735564258428807*^9}, {3.7355643319938755`*^9, 
   3.735564391776563*^9}, {3.7357276009231005`*^9, 3.73572761108115*^9}, {
   3.7357291329111423`*^9, 3.7357291345363073`*^9}, {3.735729279675825*^9, 
   3.7357292808322253`*^9}, {3.7357293129745593`*^9, 
   3.7357293158030014`*^9}, {3.7357296044102354`*^9, 3.735729605629136*^9}, {
   3.7357300186762304`*^9, 3.7357300288262186`*^9}, {3.7357306402747946`*^9, 
   3.7357306724378867`*^9}, {3.735730734505192*^9, 3.7357307368157997`*^9}, {
   3.735730777276673*^9, 3.735730781510908*^9}},
 CellTags->"esGradRad",ExpressionUUID->"ca5fc6cc-d0e7-4896-860d-fa6f348760a2"],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       TagBox[
        StyleBox[
         DynamicModuleBox[{
          ProvaProgetto`Private`x$$ = -10, Typeset`show$$ = True, 
           Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
           Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
           "\"untitled\"", Typeset`specs$$ = {{{
               Hold[ProvaProgetto`Private`x$$], -10, "Posizione"}, -100, 65, 
              1}}, Typeset`size$$ = {450., {107., 112.}}, Typeset`update$$ = 
           0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
           ProvaProgetto`Private`x$72015$$ = 0}, 
          DynamicBox[
           Manipulate`ManipulateBoxes[
           1, StandardForm, "Variables" :> {ProvaProgetto`Private`x$$ = -10}, 
            "ControllerVariables" :> {
              Hold[
              ProvaProgetto`Private`x$$, ProvaProgetto`Private`x$72015$$, 0]},
             "OtherVariables" :> {
             Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
              Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
              Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
              Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
            DynamicModule[{}, 
              
              Graphics[{
               ProvaProgetto`Private`img = Import["./assets/torre.png"]; 
                Inset[ProvaProgetto`Private`img, {75, 7}, ImageSize -> 400], 
                Text["Torre", {75, -40 + 5}], {Blue, 
                 PointSize[Large], 
                 Point[{ProvaProgetto`Private`x$$, -40}]}, 
                Line[{{-100, -40}, {150, -40}}], 
                Line[{{ProvaProgetto`Private`x$$, -40}, {70, -40}}], {Green, 
                 Thickness[0.01], 
                 Line[{{ProvaProgetto`Private`x$$, -40}, {69, -40}}]}, 
                ProvaProgetto`Private`dist := 
                ProvaProgetto`Private`computeDistance[
                 ProvaProgetto`Private`x$$, 0, 70, 0], 
                ProvaProgetto`Private`angolo := 
                ProvaProgetto`Private`GetAngolo[
                 300, ProvaProgetto`Private`dist], 
                Text[
                 Style[
                  StringForm["Altezza = Distanza x tan(``) = ``", 
                   N[ProvaProgetto`Private`angolo], 300], 15], {-35, 205}], 
                Text[
                 Style[
                  StringForm[
                  "Angolo \!\(\*\nStyleBox[\"\[Alpha]\", \"TradFormChar\"]\): \
`` \[Degree]", 
                   N[ProvaProgetto`Private`angolo]], Red, 15], {-70, 185}], 
                Text[
                 Style[
                  StringForm["Distanza: ``", ProvaProgetto`Private`dist], 
                  Green, 15], {-82, 195}], {
                 Thickness[0.001], Red, 
                 
                 Circle[{ProvaProgetto`Private`x$$, -40}, 20, {
                  0, ProvaProgetto`Private`angolo Pi/180}]}, 
                Text[
                 Style[
                 "\!\(\*\nStyleBox[\"\[Alpha]\", \"TradFormChar\"]\)", Red, 
                  20], {ProvaProgetto`Private`x$$ + 36, -35}]}, 
               PlotRange -> {{-110, 85}, {-45, 50}}, ImageSize -> 450]], 
            "Specifications" :> {{{
               ProvaProgetto`Private`x$$, -10, "Posizione"}, -100, 65, 1}}, 
            "Options" :> {}, "DefaultOptions" :> {}], 
           ImageSizeCache -> {501., {154., 160.}}, SingleEvaluation -> True], 
          Deinitialization :> None, DynamicModuleValues :> {}, 
          SynchronousInitialization -> True, 
          UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$}, 
          UnsavedVariables :> {Typeset`initDone$$}, 
          UntrackedVariables :> {Typeset`size$$}], "Manipulate", Deployed -> 
         True, StripOnInput -> False], 
        Manipulate`InterpretManipulate[1]]}}, DefaultBaseStyle -> "Column", 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],TagBox[
    GridBox[{{"\"\\t\""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
     DefaultBaseStyle -> "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],TagBox[
    GridBox[{{
       InterpretationBox[
        Cell[
         BoxData[
          FormBox[
           StyleBox[
           "\"Lorenzo, dopo questa lettura, ha avuto un'idea\\nsu come \
calcolare facilmente l'altezza della tour Eiffel.\\nProcede in questo modo: \
\\nmisura la sua distanza dalla base della torre\\ne approssima l'angolo \
\[Alpha] (con un ottante).\\nOsserva che si forma un triangolo rettangolo\\ne \
pu\[OGrave] quindi usare la propriet\[AGrave] della tangente.\"", FontFamily -> 
            "Helvetica", 20, StripOnInput -> False], TextForm]], 
         "InlineText"], 
        Text[
         Style[
         "Lorenzo, dopo questa lettura, ha avuto un'idea\nsu come calcolare \
facilmente l'altezza della tour Eiffel.\nProcede in questo modo: \nmisura la \
sua distanza dalla base della torre\ne approssima l'angolo \[Alpha] (con un \
ottante).\nOsserva che si forma un triangolo rettangolo\ne pu\[OGrave] quindi \
usare la propriet\[AGrave] della tangente.", FontFamily -> "Helvetica", 
          20]]]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
     DefaultBaseStyle -> "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.735730081303895*^9, 3.735730142811614*^9}, {
   3.735730200665557*^9, 3.7357302636712503`*^9}, {3.73573029887897*^9, 
   3.7357303557012186`*^9}, {3.7357306386646743`*^9, 3.7357306732074995`*^9}, 
   3.7357307250552607`*^9, {3.735730774322626*^9, 3.735730782417281*^9}, {
   3.735730829472032*^9, 3.735730979608699*^9}, {3.7357310519264383`*^9, 
   3.7357310884422846`*^9}},
 CellTags->"esGradRad",ExpressionUUID->"a3bb944c-4632-42f6-ac30-3e69b93fb364"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7354760936080613`*^9, 3.735476093938943*^9}, {
  3.735560065712906*^9, 
  3.7355600665010633`*^9}},ExpressionUUID->"bec59208-f83a-4011-aa1b-\
4c38c7c5fe22"],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.73544815685616*^9},ExpressionUUID->"d8e84abd-fd9c-4d84-acba-0e60f8700b00"]
},
WindowSize->{1366, 695},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "scelta"->{
  Cell[712, 25, 170, 2, 28, "Input",ExpressionUUID->"9dd115e9-98b7-4761-8eee-1cddae712fc0",
   CellTags->"scelta"]},
 "esGradRad"->{
  Cell[907, 31, 5862, 81, 28, "Input",ExpressionUUID->"ca5fc6cc-d0e7-4896-860d-fa6f348760a2",
   CellTags->"esGradRad"],
  Cell[6772, 114, 5975, 115, 366, "Output",ExpressionUUID->"a3bb944c-4632-42f6-ac30-3e69b93fb364",
   CellTags->"esGradRad"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"scelta", 13396, 252},
 {"esGradRad", 13529, 255}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 151, 3, 28, "Input",ExpressionUUID->"4309e3fd-7fc6-4390-94ce-f922b95886cc"],
Cell[712, 25, 170, 2, 28, "Input",ExpressionUUID->"9dd115e9-98b7-4761-8eee-1cddae712fc0",
 CellTags->"scelta"],
Cell[CellGroupData[{
Cell[907, 31, 5862, 81, 28, "Input",ExpressionUUID->"ca5fc6cc-d0e7-4896-860d-fa6f348760a2",
 CellTags->"esGradRad"],
Cell[6772, 114, 5975, 115, 366, "Output",ExpressionUUID->"a3bb944c-4632-42f6-ac30-3e69b93fb364",
 CellTags->"esGradRad"]
}, Open  ]],
Cell[12762, 232, 205, 4, 28, "Input",ExpressionUUID->"bec59208-f83a-4011-aa1b-4c38c7c5fe22"],
Cell[12970, 238, 126, 2, 28, "Input",ExpressionUUID->"d8e84abd-fd9c-4d84-acba-0e60f8700b00"]
}
]
*)

